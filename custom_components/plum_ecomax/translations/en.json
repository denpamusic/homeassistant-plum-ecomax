{
  "config": {
    "abort": {
      "already_configured": "Device is already configured",
      "discovery_failed": "Could not finish module discovery",
      "no_devices_found": "No devices found on the network",
      "unsupported_product": "Connected device is not supported"
    },
    "error": {
      "cannot_connect": "Failed to connect",
      "timeout_connect": "Timeout establishing connection",
      "unknown": "Unexpected error"
    },
    "progress": {
      "discover_modules": "Discovering modules for the {model}...",
      "identify_device": "Checking the device model..."
    },
    "step": {
      "serial": {
        "data": {
          "baudrate": "Baudrate",
          "device": "Device"
        },
        "title": "Serial settings"
      },
      "tcp": {
        "data": {
          "host": "Host",
          "port": "Port"
        },
        "title": "Network settings"
      },
      "user": {
        "menu_options": {
          "serial": "Connect via serial (RS-485)",
          "tcp": "Connect via network (TCP)"
        },
        "title": "Choose a connection type"
      }
    }
  },
  "device": {
    "circuit": {
      "name": "{device_name} Circuit {mixer_number}"
    },
    "mixer": {
      "name": "{device_name} Mixer {mixer_number}"
    },
    "thermostat": {
      "name": "{device_name} Thermostat {thermostat_number}"
    }
  },
  "entity": {
    "binary_sensor": {
      "alert": {
        "name": "Alert"
      },
      "circuit_pump": {
        "name": "Circuit pump"
      },
      "circulation_pump": {
        "name": "Circulation pump"
      },
      "connection_status": {
        "name": "Connection status"
      },
      "exhaust_fan": {
        "name": "Exhaust fan"
      },
      "fan": {
        "name": "Fan"
      },
      "feeder": {
        "name": "Feeder"
      },
      "fireplace_pump": {
        "name": "Fireplace pump"
      },
      "heating_pump": {
        "name": "Heating pump"
      },
      "lighter": {
        "name": "Lighter"
      },
      "mixer_pump": {
        "name": "Mixer pump"
      },
      "solar_pump": {
        "name": "Solar pump"
      },
      "water_heater_pump": {
        "name": "Water heater pump"
      }
    },
    "climate": {
      "thermostat": {
        "name": "Thermostat",
        "state_attributes": {
          "preset_mode": {
            "state": {
              "airing": "Airing",
              "antifreeze": "Antifreeze",
              "holidays": "Holidays",
              "party": "Party",
              "schedule": "Schedule"
            }
          }
        }
      }
    },
    "number": {
      "day_target_circuit_temp": {
        "name": "Day target circuit temperature"
      },
      "fuel_calorific_value": {
        "name": "Fuel calorific value",
        "unit_of_measurement": "kWh/kg"
      },
      "fuzzy_logic_max_power": {
        "name": "Fuzzy logic maximum power"
      },
      "fuzzy_logic_min_power": {
        "name": "Fuzzy logic minimum power"
      },
      "grate_mode_temp": {
        "name": "Grate mode temperature"
      },
      "max_circuit_temp": {
        "name": "Maximum circuit temperature"
      },
      "max_heating_temp": {
        "name": "Maximum heating temperature"
      },
      "max_mixer_temp": {
        "name": "Maximum mixer temperature"
      },
      "min_circuit_temp": {
        "name": "Minimum circuit temperature"
      },
      "min_heating_temp": {
        "name": "Minimum heating temperature"
      },
      "min_mixer_temp": {
        "name": "Minimum mixer temperature"
      },
      "night_target_circuit_temp": {
        "name": "Night target circuit temperature"
      },
      "target_circuit_temp": {
        "name": "Target circuit temperature"
      },
      "target_heating_temp": {
        "name": "Target heating temperature"
      },
      "target_mixer_temp": {
        "name": "Target mixer temperature"
      }
    },
    "select": {
      "mixer_work_mode": {
        "name": "Work mode",
        "state": {
          "heated_floor": "Heated floor",
          "heating": "Heating",
          "off": "Off",
          "pump_only": "Pump only"
        }
      },
      "summer_mode": {
        "name": "Summer mode",
        "state": {
          "auto": "Auto",
          "summer": "Summer",
          "winter": "Winter"
        }
      }
    },
    "sensor": {
      "boiler_load": {
        "name": "Boiler load"
      },
      "boiler_power": {
        "name": "Boiler power"
      },
      "circuit_target_temp": {
        "name": "Circuit target temperature"
      },
      "circuit_temp": {
        "name": "Circuit temperature"
      },
      "connected_modules": {
        "name": "Connected modules",
        "state_attributes": {
          "ecolambda": {
            "name": "ecoLAMBDA software version"
          },
          "ecoster": {
            "name": "ecoSTER software version"
          },
          "module_a": {
            "name": "Module A software version"
          },
          "module_b": {
            "name": "Module B software version"
          },
          "module_c": {
            "name": "Module C software version"
          },
          "panel": {
            "name": "Panel software version"
          }
        }
      },
      "ecomax_state": {
        "name": "State",
        "state": {
          "alert": "Alert",
          "burning_off": "Burning Off",
          "heating": "Heating",
          "idle": "Idle",
          "kindling": "Kindling",
          "off": "Off",
          "paused": "Paused",
          "stabilization": "Stabilization",
          "standby": "Standby",
          "unknown": "Unknown"
        },
        "state_attributes": {
          "numeric_state": {
            "name": "Numeric state"
          }
        }
      },
      "exhaust_temp": {
        "name": "Exhaust temperature"
      },
      "fan_power": {
        "name": "Fan power"
      },
      "feeder_temp": {
        "name": "Feeder temperature"
      },
      "fireplace_temp": {
        "name": "Fireplace temperature"
      },
      "flame_intensity": {
        "name": "Flame intensity"
      },
      "fuel_consumption": {
        "name": "Fuel consumption",
        "unit_of_measurement": "kg/h"
      },
      "fuel_level": {
        "name": "Fuel level"
      },
      "heating_target": {
        "name": "Heating target temperature"
      },
      "heating_temp": {
        "name": "Heating temperature"
      },
      "lower_buffer_temp": {
        "name": "Lower buffer temperature"
      },
      "lower_solar_temp": {
        "name": "Lower solar temperature"
      },
      "mixer_target_temp": {
        "name": "Mixer target temperature"
      },
      "mixer_temp": {
        "name": "Mixer temperature"
      },
      "outside_temp": {
        "name": "Outside temperature"
      },
      "oxygen_level": {
        "name": "Oxygen level"
      },
      "return_temp": {
        "name": "Return temperature"
      },
      "service_password": {
        "name": "Service password"
      },
      "total_fuel_burned": {
        "name": "Total fuel burned",
        "state_attributes": {
          "burned_since_last_update": {
            "name": "Burned since last update, g"
          }
        }
      },
      "uid": {
        "name": "UID"
      },
      "upper_buffer_temp": {
        "name": "Upper buffer temperature"
      },
      "upper_solar_temp": {
        "name": "Upper solar temperature"
      },
      "water_heater_target": {
        "name": "Water heater target temperature"
      },
      "water_heater_temp": {
        "name": "Water heater temperature"
      }
    },
    "switch": {
      "controller_switch": {
        "name": "Controller switch"
      },
      "disable_pump_on_thermostat": {
        "name": "Disable pump on thermostat"
      },
      "enable_circuit": {
        "name": "Enable circuit"
      },
      "enable_in_summer_mode": {
        "name": "Enable in summer mode"
      },
      "fuzzy_logic_switch": {
        "name": "Fuzzy logic switch"
      },
      "heating_schedule_switch": {
        "name": "Heating schedule switch"
      },
      "water_heater_disinfection_switch": {
        "name": "Water heater disinfection switch"
      },
      "water_heater_pump_switch": {
        "name": "Water heater pump switch"
      },
      "water_heater_schedule_switch": {
        "name": "Water heater schedule switch"
      },
      "weather_control_switch": {
        "name": "Weather control switch"
      }
    },
    "water_heater": {
      "indirect_water_heater": {
        "name": "Indirect water heater"
      }
    }
  },
  "exceptions": {
    "connection_timeout": {
      "message": "Timed out while trying to connect ({connection})"
    },
    "device_not_found": {
      "message": "Requested device not found ({device})"
    },
    "device_not_ready": {
      "message": "Device not ready ({device})"
    },
    "property_not_writable": {
      "message": "Cannot change read-only \"{property}\" property"
    },
    "invalid_parameter_value": {
      "message": "Invalid value \"{value}\" for the \"{parameter}\" parameter"
    },
    "invalid_schedule_interval": {
      "message": "Invalid interval for \"{schedule}\". Got {start} to {end}."
    },
    "parameter_not_found": {
      "message": "Requested \"{parameter}\" parameter not found"
    },
    "parameter_not_found_with_suggestion": {
      "message": "Requested parameter \"{parameter}\" not found, did you mean \"{suggestion}\"?"
    },
    "schedule_not_found": {
      "message": "Requested schedule \"{schedule}\" not found"
    },
    "set_parameter_timeout": {
      "message": "Request to set a \"{parameter}\" parameter timed out"
    },
    "device_disconnected": {
      "message": "The selected device was disconnected ({device})"
    },
    "unsupported_device": {
      "message": "The selected device is invalid or not supported ({device})"
    },
    "entity_not_found": {
      "message": "The selected entity \"{entity}\" was not found on the device ({device})"
    }
  },
  "options": {
    "step": {
      "add_entity": {
        "title": "Select a source device",
        "data": {
          "source_device": "Source device"
        }
      },
      "edit_entity": {
        "title": "Select an entity to edit",
        "data": {
          "entity_id": "Entity"
        }
      },
      "remove_entity": {
        "title": "Select an entity to remove",
        "data": {
          "entity_id": "Entity"
        }
      },
      "entity_details": {
        "data": {
          "device_class": "Device class",
          "key": "Key",
          "mode": "Mode",
          "name": "Name",
          "state_class": "State class",
          "unit_of_measurement": "Unit of measurement",
          "update_interval": "Update interval"
        },
        "title": "Edit {platform} details"
      },
      "entity_type": {
        "menu_options": {
          "add_binary_sensor": "Binary sensor",
          "add_number": "Number",
          "add_sensor": "Sensor",
          "add_switch": "Switch"
        },
        "title": "Select entity type"
      },
      "init": {
        "menu_options": {
          "add_entity": "Add a new entity",
          "edit_entity": "Edit an entity",
          "remove_entity": "Remove an entity",
          "rediscover_devices": "Rediscover connected devices"
        }
      }
    },
    "abort": {
      "no_entities_to_edit_or_remove": "No entities to edit or remove, you'll need to add some first.",
      "no_entities_to_add": "No entities to add, all available entities have been added already.",
      "entry_not_ready": "Config entry not ready, please wait and try again."
    }
  },
  "selector": {
    "binary_sensor_device_class": {
      "options": {
        "battery": "Battery",
        "battery_charging": "Charging",
        "carbon_monoxide": "Carbon monoxide",
        "cold": "Cold",
        "connectivity": "Connectivity",
        "door": "Door",
        "garage_door": "Garage door",
        "gas": "Gas",
        "heat": "Heat",
        "light": "Light",
        "lock": "Lock",
        "moisture": "Moisture",
        "motion": "Motion",
        "moving": "Moving",
        "occupancy": "Occupancy",
        "opening": "Opening",
        "plug": "Plug",
        "power": "Power",
        "presence": "Presence",
        "problem": "Problem",
        "running": "Running",
        "safety": "Safety",
        "smoke": "Smoke",
        "sound": "Sound",
        "update": "Update",
        "vibration": "Vibration",
        "window": "Window"
      }
    },
    "number_device_class": {
      "options": {
        "absolute_humidity": "Absolute humidity",
        "apparent_power": "Apparent power",
        "area": "Area",
        "aqi": "Air quality index",
        "atmospheric_pressure": "Atmospheric pressure",
        "battery": "Battery",
        "blood_glucose_concentration": "Blood glucose concentration",
        "carbon_dioxide": "Carbon dioxide",
        "carbon_monoxide": "Carbon monoxide",
        "conductivity": "Conductivity",
        "current": "Current",
        "data_rate": "Data rate",
        "data_size": "Data size",
        "distance": "Distance",
        "duration": "Duration",
        "energy": "Energy",
        "energy_distance": "Energy distance",
        "energy_storage": "Stored energy",
        "frequency": "Frequency",
        "gas": "Gas",
        "humidity": "Humidity",
        "illuminance": "Illuminance",
        "irradiance": "Irradiance",
        "moisture": "Moisture",
        "monetary": "Balance",
        "nitrogen_dioxide": "Nitrogen dioxide",
        "nitrogen_monoxide": "Nitrogen monoxide",
        "nitrous_oxide": "Nitrous oxide",
        "ozone": "Ozone",
        "ph": "pH",
        "pm1": "PM1",
        "pm10": "PM10",
        "pm25": "PM2.5",
        "power": "Power",
        "power_factor": "Power factor",
        "precipitation": "Precipitation",
        "precipitation_intensity": "Precipitation intensity",
        "pressure": "Pressure",
        "reactive_power": "Reactive power",
        "reactive_energy": "Reactive energy",
        "signal_strength": "Signal strength",
        "sound_pressure": "Sound pressure",
        "speed": "Speed",
        "sulphur_dioxide": "Sulphur dioxide",
        "temperature": "Temperature",
        "volatile_organic_compounds": "VOCs",
        "volatile_organic_compounds_parts": "VOCs (parts)",
        "voltage": "Voltage",
        "volume": "Volume",
        "volume_flow_rate": "Volume flow rate",
        "volume_storage": "Stored volume",
        "water": "Water",
        "weight": "Weight",
        "wind_speed": "Wind speed",
        "wind_direction": "Wind direction"
      }
    },
    "number_mode": {
      "options": {
        "auto": "Auto",
        "box": "Box",
        "slider": "Slider"
      }
    },
    "number_unit_of_measurement": {
      "options": {
        "none": "No unit of measurement"
      }
    },
    "preset": {
      "options": {
        "day": "Day",
        "night": "Night"
      }
    },
    "schedule_type": {
      "options": {
        "heating": "Heating",
        "water_heater": "Water heater"
      }
    },
    "sensor_device_class": {
      "options": {
        "absolute_humidity": "Absolute humidity",
        "apparent_power": "Apparent power",
        "area": "Area",
        "aqi": "Air quality index",
        "atmospheric_pressure": "Atmospheric pressure",
        "battery": "Battery",
        "blood_glucose_concentration": "Blood glucose concentration",
        "carbon_dioxide": "Carbon dioxide",
        "carbon_monoxide": "Carbon monoxide",
        "conductivity": "Conductivity",
        "current": "Current",
        "data_rate": "Data rate",
        "data_size": "Data size",
        "date": "Date",
        "distance": "Distance",
        "duration": "Duration",
        "energy": "Energy",
        "energy_distance": "Energy distance",
        "energy_storage": "Stored energy",
        "frequency": "Frequency",
        "gas": "Gas",
        "humidity": "Humidity",
        "illuminance": "Illuminance",
        "irradiance": "Irradiance",
        "moisture": "Moisture",
        "monetary": "Balance",
        "nitrogen_dioxide": "Nitrogen dioxide",
        "nitrogen_monoxide": "Nitrogen monoxide",
        "nitrous_oxide": "Nitrous oxide",
        "ozone": "Ozone",
        "ph": "pH",
        "pm1": "PM1",
        "pm10": "PM10",
        "pm25": "PM2.5",
        "power": "Power",
        "power_factor": "Power factor",
        "precipitation": "Precipitation",
        "precipitation_intensity": "Precipitation intensity",
        "pressure": "Pressure",
        "reactive_power": "Reactive power",
        "reactive_energy": "Reactive energy",
        "signal_strength": "Signal strength",
        "sound_pressure": "Sound pressure",
        "speed": "Speed",
        "sulphur_dioxide": "Sulphur dioxide",
        "temperature": "Temperature",
        "timestamp": "Timestamp",
        "volatile_organic_compounds": "VOCs",
        "volatile_organic_compounds_parts": "VOCs (parts)",
        "voltage": "Voltage",
        "volume": "Volume",
        "volume_flow_rate": "Volume flow rate",
        "volume_storage": "Stored volume",
        "water": "Water",
        "weight": "Weight",
        "wind_speed": "Wind speed",
        "wind_direction": "Wind direction"
      }
    },
    "sensor_state_class": {
      "options": {
        "measurement": "Measurement",
        "measurement_angle": "Measurement angle",
        "total": "Total",
        "total_increasing": "Total increasing"
      }
    },
    "sensor_unit_of_measurement": {
      "options": {
        "none": "No unit of measurement"
      }
    },
    "weekdays": {
      "options": {
        "friday": "Friday",
        "monday": "Monday",
        "saturday": "Saturday",
        "sunday": "Sunday",
        "thursday": "Thursday",
        "tuesday": "Tuesday",
        "wednesday": "Wednesday"
      }
    }
  },
  "services": {
    "calibrate_meter": {
      "description": "Allows to calibrate meter by pre-setting it's value.",
      "fields": {
        "value": {
          "description": "Sets meter to this value.",
          "name": "Value"
        }
      },
      "name": "Calibrate meter"
    },
    "get_parameter": {
      "description": "Gets device parameter.",
      "fields": {
        "name": {
          "description": "Name of the parameter.",
          "name": "Name"
        }
      },
      "name": "Get parameter"
    },
    "get_schedule": {
      "description": "Gets device schedule.",
      "fields": {
        "type": {
          "description": "Type of the schedule.",
          "name": "Type"
        },
        "weekdays": {
          "description": "Weekdays for which to get the schedules.",
          "name": "Weekdays"
        }
      },
      "name": "Get schedule"
    },
    "reset_meter": {
      "description": "Resets meter value.",
      "name": "Reset meter"
    },
    "set_parameter": {
      "description": "Sets device parameter.",
      "fields": {
        "name": {
          "description": "Name of the parameter.",
          "name": "Name"
        },
        "value": {
          "description": "A value that parameter will be set to.",
          "name": "Value"
        }
      },
      "name": "Set parameter"
    },
    "set_schedule": {
      "description": "Sets device schedule.",
      "fields": {
        "end": {
          "description": "Time at which scheduled state will be cleared.",
          "name": "End time"
        },
        "preset": {
          "description": "Preset at scheduled time.",
          "name": "Preset"
        },
        "start": {
          "description": "Time at which scheduled state will be set.",
          "name": "Start time"
        },
        "type": {
          "description": "Type of the schedule.",
          "name": "Type"
        },
        "weekdays": {
          "description": "Weekdays for which to set the schedules.",
          "name": "Weekdays"
        }
      },
      "name": "Set schedule"
    }
  },
  "system_health": {
    "info": {
      "pyplumio_version": "PyPlumIO version",
      "received_frames": "Received frames",
      "sent_frames": "Sent frames",
      "failed_frames": "Failed frames",
      "failure_rate": "Failure rate",
      "connected_since": "Connected since",
      "connection_losses": "Connection losses",
      "custom_entities": "Custom entities"
    }
  }
}
